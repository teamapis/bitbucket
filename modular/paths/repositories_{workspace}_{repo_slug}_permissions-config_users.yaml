get:
  tags:
    - Repositories
  description: >-
    Returns a paginated list of explicit user permissions for the given
    repository.


    Example:


    ```

    $ curl
    https://api.bitbucket.org/2.0/repositories/atlassian_tutorial/geordi/permissions-config/users


    {
      "pagelen": 10,
      "values": [
        {
            "type": "repository_user_permission",
            "user": {
                "type": "user",
                "display_name": "Colin Cameron",
                "uuid": "{d301aafa-d676-4ee0-88be-962be7417567}",
                "account_id": "557058:ba8948b2-49da-43a9-9e8b-e7249b8e324a"
            },
            "permission": "admin",
            "links": {
              "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/atlassian_tutorial/geordi/
                         permissions-config/users/557058:ba8948b2-49da-43a9-9e8b-e7249b8e324a"
              }
            }
        },
        {
          "type": "repository_user_permission",
          "user": {
            "type": "user",
            "display_name": "Sean Conaty",
            "uuid": "{504c3b62-8120-4f0c-a7bc-87800b9d6f70}",
            "account_id": "557058:ba8948b2-49da-43a9-9e8b-e7249b8e324c"
          },
          "permission": "write",
          "links": {
            "self": {
              "href": "https://api.bitbucket.org/2.0//repositories/atlassian_tutorial/geordi/
                       permissions-config/users/557058:ba8948b2-49da-43a9-9e8b-e7249b8e324c"
            }
          }
        }
      ],
      "page": 1,
      "size": 2
    }

    ```
  summary: List explicit user permissions for a repository
  responses:
    '200':
      description: Paginated of explicit user permissions on the repository.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/paginated_repository_user_permissions.yaml
    '401':
      description: The user couldn't be authenticated.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '403':
      description: The requesting user isn't an admin of the repository.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '404':
      description: No repository exists for the given repo slug and workspace.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
  security:
    - oauth2:
        - repository:admin
    - basic: []
    - api_key: []
parameters:
  - name: repo_slug
    in: path
    description: |
      This can either be the repository slug or the UUID of the repository,
      surrounded by curly-braces, for example: `{repository UUID}`.
    required: true
    schema:
      type: string
  - name: workspace
    in: path
    description: |
      This can either be the workspace ID (slug) or the workspace UUID
      surrounded by curly-braces, for example: `{workspace UUID}`.
    required: true
    schema:
      type: string
