get:
  tags:
    - Issue tracker
  description: >-
    Returns the list of all changes that have been made to the specified

    issue. Changes are returned in chronological order with the oldest

    change first.


    Each time an issue is edited in the UI or through the API, an immutable

    change record is created under the `/issues/123/changes` endpoint. It

    also has a comment associated with the change.


    Note that this operation is changing significantly, due to privacy changes.

    See the
    [announcement](https://developer.atlassian.com/cloud/bitbucket/bitbucket-api-changes-gdpr/#changes-to-the-issue-changes-api)

    for details.


    ```

    $ curl -s
    https://api.bitbucket.org/2.0/repositories/evzijst/dogslow/issues/1/changes
    - | jq .


    {
      "pagelen": 20,
      "values": [
        {
          "changes": {
            "priority": {
              "new": "trivial",
              "old": "major"
            },
            "assignee": {
              "new": "",
              "old": "evzijst"
            },
            "assignee_account_id": {
              "new": "",
              "old": "557058:c0b72ad0-1cb5-4018-9cdc-0cde8492c443"
            },
            "kind": {
              "new": "enhancement",
              "old": "bug"
            }
          },
          "links": {
            "self": {
              "href": "https://api.bitbucket.org/2.0/repositories/evzijst/dogslow/issues/1/changes/2"
            },
            "html": {
              "href": "https://bitbucket.org/evzijst/dogslow/issues/1#comment-2"
            }
          },
          "issue": {
            "links": {
              "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/evzijst/dogslow/issues/1"
              }
            },
            "type": "issue",
            "id": 1,
            "repository": {
              "links": {
                "self": {
                  "href": "https://api.bitbucket.org/2.0/repositories/evzijst/dogslow"
                },
                "html": {
                  "href": "https://bitbucket.org/evzijst/dogslow"
                },
                "avatar": {
                  "href": "https://bitbucket.org/evzijst/dogslow/avatar/32/"
                }
              },
              "type": "repository",
              "name": "dogslow",
              "full_name": "evzijst/dogslow",
              "uuid": "{988b17c6-1a47-4e70-84ee-854d5f012bf6}"
            },
            "title": "Updated title"
          },
          "created_on": "2018-03-03T00:35:28.353630+00:00",
          "user": {
            "username": "evzijst",
            "nickname": "evzijst",
            "display_name": "evzijst",
            "type": "user",
            "uuid": "{aaa7972b-38af-4fb1-802d-6e3854c95778}",
            "links": {
              "self": {
                "href": "https://api.bitbucket.org/2.0/users/evzijst"
              },
              "html": {
                "href": "https://bitbucket.org/evzijst/"
              },
              "avatar": {
                "href": "https://bitbucket.org/account/evzijst/avatar/32/"
              }
            }
          },
          "message": {
            "raw": "Removed assignee, changed kind and priority.",
            "markup": "markdown",
            "html": "<p>Removed assignee, changed kind and priority.</p>",
            "type": "rendered"
          },
          "type": "issue_change",
          "id": 2
        }
      ],
      "page": 1
    }

    ```


    Changes support [filtering and
    sorting](/cloud/bitbucket/rest/intro/#filtering) that

    can be used to search for specific changes. For instance, to see

    when an issue transitioned to "resolved":


    ```

    $ curl -s
    https://api.bitbucket.org/2.0/repositories/site/master/issues/1/changes \
       -G --data-urlencode='q=changes.state.new = "resolved"'
    ```


    This resource is only available on repositories that have the issue

    tracker enabled.


    N.B.


    The `changes.assignee` and `changes.assignee_account_id` fields are not

    a `user` object. Instead, they contain the raw `username` and

    `account_id` of the user. This is to protect the integrity of the audit

    log even after a user account gets deleted.


    The `changes.assignee` field is deprecated will disappear in the

    future. Use `changes.assignee_account_id` instead.
  summary: List changes on an issue
  responses:
    '200':
      description: Returns all the issue changes that were made on the specified issue.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/paginated_log_entries.yaml
    '404':
      description: >-
        The specified repository or issue does not exist or does not have the
        issue tracker enabled.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
  parameters:
    - name: q
      in: query
      description: >-

        Query string to narrow down the response. See

        [filtering and sorting](/cloud/bitbucket/rest/intro/#filtering) for
        details.
      required: false
      schema:
        type: string
    - name: sort
      in: query
      description: >

        Name of a response property to sort results. See

        [filtering and
        sorting](/cloud/bitbucket/rest/intro/#sorting-query-results)

        for details.
      required: false
      schema:
        type: string
  security:
    - oauth2:
        - issue
    - basic: []
    - api_key: []
post:
  tags:
    - Issue tracker
  description: |-
    Makes a change to the specified issue.

    For example, to change an issue's state and assignee, create a new
    change object that modifies these fields:

    ```
    curl https://api.bitbucket.org/2.0/site/master/issues/1234/changes \
      -s -u evzijst -X POST -H "Content-Type: application/json" \
      -d '{
        "changes": {
          "assignee_account_id": {
            "new": "557058:c0b72ad0-1cb5-4018-9cdc-0cde8492c443"
          },
          "state": {
            "new": 'resolved"
          }
        }
        "message": {
          "raw": "This is now resolved."
        }
      }'
    ```

    The above example also includes a custom comment to go alongside the
    change. This comment will also be visible on the issue page in the UI.

    The fields of the `changes` object are strings, not objects. This
    allows for immutable change log records, even after user accounts,
    milestones, or other objects recorded in a change entry, get renamed or
    deleted.

    The `assignee_account_id` field stores the account id. When POSTing a
    new change and changing the assignee, the client should therefore use
    the user's account_id in the `changes.assignee_account_id.new` field.

    This call requires authentication. Private repositories or private
    issue trackers require the caller to authenticate with an account that
    has appropriate authorization.
  summary: Modify the state of an issue
  responses:
    '201':
      description: The newly created issue change.
      headers:
        Location:
          description: The (absolute) URL of the newly created issue change.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: ../components/schemas/issue_change.yaml
    '401':
      description: When the request wasn't authenticated.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '403':
      description: When the authenticated user isn't authorized to modify the issue.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '404':
      description: >-
        The specified repository or issue does not exist or does not have the
        issue tracker enabled.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/issue_change.yaml
    description: >-
      The new issue state change. The only required elements are
      `changes.[].new`. All other elements can be omitted from the body.
    required: true
  security:
    - oauth2:
        - issue:write
    - basic: []
    - api_key: []
parameters:
  - name: issue_id
    in: path
    description: The issue id
    required: true
    schema:
      type: string
  - name: repo_slug
    in: path
    description: |
      This can either be the repository slug or the UUID of the repository,
      surrounded by curly-braces, for example: `{repository UUID}`.
    required: true
    schema:
      type: string
  - name: workspace
    in: path
    description: |
      This can either be the workspace ID (slug) or the workspace UUID
      surrounded by curly-braces, for example: `{workspace UUID}`.
    required: true
    schema:
      type: string
