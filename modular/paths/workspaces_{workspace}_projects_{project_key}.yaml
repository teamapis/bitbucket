delete:
  tags:
    - Projects
  description: >-
    Deletes this project. This is an irreversible operation.


    You cannot delete a project that still contains repositories.

    To delete the project,
    [delete](/cloud/bitbucket/rest/api-group-repositories/#api-repositories-workspace-repo-slug-delete)

    or transfer the repositories first.


    Example:

    ```

    $ curl -X DELETE https://api.bitbucket.org/2.0/bbworkspace1/PROJ

    ```
  summary: Delete a project for a workspace
  responses:
    '204':
      description: Successful deletion.
    '403':
      description: >-
        The requesting user isn't authorized to delete the project or the
        project isn't empty.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '404':
      description: A project isn't hosted at this location.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
  security:
    - oauth2:
        - project:admin
    - basic: []
    - api_key: []
get:
  tags:
    - Projects
    - Workspaces
  description: Returns the requested project.
  summary: Get a project for a workspace
  responses:
    '200':
      description: The project that is part of a workspace.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/project.yaml
    '401':
      description: The request wasn't authenticated.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '403':
      description: The requesting user isn't authorized to access the project.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '404':
      description: A project isn't hosted at this location.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
  security:
    - oauth2:
        - project
    - basic: []
    - api_key: []
put:
  tags:
    - Projects
  description: |-
    Since this endpoint can be used to both update and to create a
    project, the request body depends on the intent.

    #### Creation

    See the POST documentation for the project collection for an
    example of the request body.

    Note: The `key` should not be specified in the body of request
    (since it is already present in the URL). The `name` is required,
    everything else is optional.

    #### Update

    See the POST documentation for the project collection for an
    example of the request body.

    Note: The key is not required in the body (since it is already in
    the URL). The key may be specified in the body, if the intent is
    to change the key itself. In such a scenario, the location of the
    project is changed and is returned in the `Location` header of the
    response.
  summary: Update a project for a workspace
  responses:
    '200':
      description: The existing project is has been updated.
      headers:
        Location:
          description: |-
            The location of the project. This header is only provided
            when the project key is updated.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: ../components/schemas/project.yaml
    '201':
      description: A new project has been created.
      headers:
        Location:
          description: The location of the newly created project
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: ../components/schemas/project.yaml
    '403':
      description: The requesting user isn't authorized to update or create the project.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '404':
      description: >-
        A workspace doesn't exist at the location. Note that the project's
        absence from this location doesn't raise a 404, since a PUT at a
        non-existent location can be used to create a new project.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
  requestBody:
    $ref: ../components/requestBodies/project.yaml
  security:
    - oauth2:
        - project:admin
    - basic: []
    - api_key: []
parameters:
  - name: project_key
    in: path
    description: |
      The project in question. This is the actual `key` assigned
      to the project.
    required: true
    schema:
      type: string
  - name: workspace
    in: path
    description: |
      This can either be the workspace ID (slug) or the workspace UUID
      surrounded by curly-braces, for example: `{workspace UUID}`.
    required: true
    schema:
      type: string
