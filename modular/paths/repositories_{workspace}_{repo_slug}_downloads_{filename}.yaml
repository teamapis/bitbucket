delete:
  tags:
    - Downloads
  description: Deletes the specified download artifact from the repository.
  summary: Delete a download artifact
  responses:
    '204':
      description: The specified download artifact was deleted.
    '403':
      description: User is not authorized to write to the repository.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '404':
      description: The specified download does not exist.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
  security:
    - oauth2:
        - repository:write
    - basic: []
    - api_key: []
get:
  tags:
    - Downloads
  description: |-
    Return a redirect to the contents of a download artifact.

    This endpoint returns the actual file contents and not the artifact's
    metadata.

        $ curl -s -L https://api.bitbucket.org/2.0/repositories/evzijst/git-tests/downloads/hello.txt
        Hello World
  summary: Get a download artifact link
  responses:
    '302':
      description: Redirects to the url of the specified download artifact.
    '403':
      description: User is not authorized to read from the repository.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '404':
      description: The specified download artifact does not exist.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
  security:
    - oauth2:
        - repository
    - basic: []
    - api_key: []
parameters:
  - name: filename
    in: path
    description: Name of the file.
    required: true
    schema:
      type: string
  - name: repo_slug
    in: path
    description: |
      This can either be the repository slug or the UUID of the repository,
      surrounded by curly-braces, for example: `{repository UUID}`.
    required: true
    schema:
      type: string
  - name: workspace
    in: path
    description: |
      This can either be the workspace ID (slug) or the workspace UUID
      surrounded by curly-braces, for example: `{workspace UUID}`.
    required: true
    schema:
      type: string
