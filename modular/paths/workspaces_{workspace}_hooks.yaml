get:
  tags:
    - Workspaces
    - Webhooks
  description: Returns a paginated list of webhooks installed on this workspace.
  summary: List webhooks for a workspace
  responses:
    '200':
      description: The paginated list of installed webhooks.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/paginated_webhook_subscriptions.yaml
    '403':
      description: If the authenticated user is not an owner on the specified workspace.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '404':
      description: If the specified workspace does not exist.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
  security:
    - oauth2:
        - webhook
    - basic: []
    - api_key: []
post:
  tags:
    - Workspaces
    - Webhooks
  description: >-
    Creates a new webhook on the specified workspace.


    Workspace webhooks are fired for events from all repositories contained

    by that workspace.


    Example:


    ```

    $ curl -X POST -u credentials -H 'Content-Type: application/json'
      https://api.bitbucket.org/2.0/workspaces/my-workspace/hooks
      -d '
        {
          "description": "Webhook Description",
          "url": "https://example.com/",
          "active": true,
          "events": [
            "repo:push",
            "issue:created",
            "issue:updated"
          ]
        }'
    ```


    This call requires the webhook scope, as well as any scope

    that applies to the events that the webhook subscribes to. In the

    example above that means: `webhook`, `repository` and `issue`.


    The `url` must properly resolve and cannot be an internal, non-routed
    address.


    Only workspace owners can install webhooks on workspaces.
  summary: Create a webhook for a workspace
  responses:
    '201':
      description: If the webhook was registered successfully.
      headers:
        Location:
          description: The URL of new newly created webhook.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: ../components/schemas/webhook_subscription.yaml
    '403':
      description: >-
        If the authenticated user does not have permission to install webhooks
        on the specified workspace.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
    '404':
      description: If the specified workspace does not exist.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/error.yaml
  security:
    - oauth2:
        - webhook
    - basic: []
    - api_key: []
parameters:
  - name: workspace
    in: path
    description: |
      This can either be the workspace ID (slug) or the workspace UUID
      surrounded by curly-braces, for example: `{workspace UUID}`.
    required: true
    schema:
      type: string
